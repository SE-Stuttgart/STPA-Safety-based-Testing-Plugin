1. Get the sources from sourceForge 
 1.1 in eclipse get the egit plug in and clone it from 
     git clone git://git.code.sf.net/p/stampp/git stampp-git
 1.2 after cloning the repo you can clean any occuring errors by synchronising the plugin.xml of every project with its sourcepath
     
2. To run xstampp you need:
	- at least JavaSE 1.7
	- eclipse http://eclipse.org/downloads/packages/eclipse-rcp-and-rap-developers/lunasr2
   	- to install gef ( help -> install new software->http://download.eclipse.org/tools/gef/updates/releases/
   	- to install nebula grid from http://download.eclipse.org/technology/nebula/snapshot/
	   - to install maven https://maven.apache.org/download.cgi
	   - the m2e maven feature for eclipse on http://repo1.maven.org/maven2/.m2e/connectors/m2eclipse-tycho/0.6.0/N/0.6.0.201207302152/
3. Create a new plugin:
	- create a new plugin by clicking new->Others..->Plug-in Developement->Plug-in Project
	- add dependencies xstampp and xstampp.extension
	- add the extension xstampp.extension.steppedProcess to your plugin
	- create a class implemnting IDataModel
	- create stepEditors which must extend StandartEditorPart and implement IViewBase
	- xstampp loads the files which are selected in the load Dialog or already located in the workspace 
	  by directly calling a load command registered as command in the steppedProcess extensionPoint herefore it needs:
		- a load job which extends AbstractLoadJob
		- a load Handler extending AbstractHandler which is registered as default handler for the load command 
		- let your handler.execute() return a new instance of your load job